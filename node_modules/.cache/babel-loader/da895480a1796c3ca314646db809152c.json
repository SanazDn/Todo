{"ast":null,"code":"var _jsxFileName = \"/Users/sanazdehghan/Downloads/ExpenseApp-main/src/components/quotes/QuoteForm.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteForm = props => {\n  _s();\n\n  const [isEntering, setIsEntering] = useState(false);\n  const [error, setError] = useState(null);\n  const errorBlur = {\n    title: \"Invalid input\",\n    message: \"Please fill all the fields.\"\n  };\n  const typeInputRef = useRef();\n  const textInputRef = useRef();\n  const dateInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = typeInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    const enteredDate = dateInputRef.current.value;\n\n    if (enteredAuthor.trim().length === 0 || enteredText.trim().length === 0 || enteredDate.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please fill all the fields correctly!\"\n      });\n      return;\n    } // optional: Could validate here\n\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText,\n      date: enteredDate\n    });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const messageBlur = event => {\n    if (textInputRef.trim().length === 0) {\n      setError(errorBlur);\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Prompt, {\n      when: isEntering,\n      message: location => 'Are you sure you want to leave? All your entered data will be lost!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onFocus: formFocusedHandler,\n        className: classes.form,\n        onSubmit: submitFormHandler,\n        children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loading,\n          children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"author\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"author\",\n            ref: typeInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"number\",\n            children: \"List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"text\",\n            rows: \"5\",\n            ref: textInputRef,\n            onBlur: messageBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"number\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"date\",\n            rows: \"5\",\n            ref: dateInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: finishEnteringHandler,\n            className: \"btn\",\n            children: \"Add ToDo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteForm, \"HoFPywhIEPw0gKXiD0L2O6sxOCU=\");\n\n_c = QuoteForm;\nexport default QuoteForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["Fragment","useRef","useState","Prompt","Card","LoadingSpinner","classes","QuoteForm","props","isEntering","setIsEntering","error","setError","errorBlur","title","message","typeInputRef","textInputRef","dateInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","enteredDate","trim","length","onAddQuote","author","text","date","finishEnteringHandler","formFocusedHandler","messageBlur","location","form","isLoading","loading","control","actions"],"sources":["/Users/sanazdehghan/Downloads/ExpenseApp-main/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const [error, setError] = useState(null);\n  const errorBlur = {\n    title: \"Invalid input\",\n    message: \"Please fill all the fields.\",\n  };\n\n  const typeInputRef = useRef();\n  const textInputRef = useRef();\n  const dateInputRef = useRef();\n\n  \n\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = typeInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    const enteredDate =  dateInputRef.current.value;\n\n    \n\n    if (\n      enteredAuthor.trim().length === 0 ||\n      enteredText.trim().length === 0 ||\n      enteredDate.trim().length === 0 \n      \n    ) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please fill all the fields correctly!\",\n      });\n\n      return;\n    }\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText , date: enteredDate });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const messageBlur = (event) => {\n    if (textInputRef.trim().length === 0) {\n      setError(errorBlur);\n      return;\n    }\n  };\n\n  \n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Task</label>\n            <input type='text' id='author' ref={typeInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='number'>List</label>\n            <input id='text' rows='5' ref={textInputRef} onBlur={messageBlur}></input>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='number'>Date</label>\n            <input id='date' rows='5' ref={dateInputRef}></input>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add ToDo</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}